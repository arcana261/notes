upstream {{ registry_domain }}_backend {
    server 127.0.0.1:5000;
}

server {
   listen         80;
   listen    [::]:80;
   server_name    {{ registry_domain }};
   location / {
   return         301 https://$server_name$request_uri;
   }

   location /.well-known {
      alias /var/www/{{ registry_domain }}/.well-known;
   }

   access_log /var/log/nginx/{{ registry_domain }}_access.log;
   error_log /var/log/nginx/{{ registry_domain }}_error.log error;
}

server {
   listen        443 ssl;
   listen   [::]:443 ssl;
   server_name {{ registry_domain }};

   access_log /var/log/nginx/{{ registry_domain }}_access.log;
   error_log /var/log/nginx/{{ registry_domain }}_error.log error;

   ssl on;
   ssl_certificate /etc/letsencrypt/live/{{ registry_domain }}/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/{{ registry_domain }}/privkey.pem;
   ssl_session_timeout 5m;
   ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;
   
   location /.well-known {
      alias /var/www/{{ registry_domain }}/.well-known;
   }

   location / {
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
        return 404;
      }

      gzip off;
      proxy_set_header X-Forwarded-Ssl on;

      # disable any limits to avoid HTTP 413 for large image uploads
      client_max_body_size 0;

      # required to avoid HTTP 411: see Issue #1486 (https://github.com/dotcloud/docker/issues/1486)
      chunked_transfer_encoding on;
      
      # set HSTS-Header because we only allow https traffic
      add_header Strict-Transport-Security "max-age=31536000;";
  
      add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;


      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Frame-Options SAMEORIGIN;
      proxy_read_timeout 900;
      proxy_ssl_verify off;
      proxy_http_version 1.1;
      proxy_pass http://{{ registry_domain }}_backend;
   }
}

