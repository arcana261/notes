- name: Ensure /srv/{{ blog_domain }}/bin exists
  shell: creates=/srv/{{ blog_domain }}/bin warn=no mkdir -p /srv/{{ blog_domain }}/bin

- name: create deploy script
  template:
    src: redeploy.sh.j2
    dest: /srv/{{ blog_domain }}/bin/redeploy.sh
    owner: root
    group: root
    mode: '0755'
  notify: redeploy

- name: clone blog
  git:
    repo: https://github.com/arcana261/ucoder.git
    dest: /usr/share/nginx/{{ blog_domain }}

- name: Ensure /usr/share/nginx{{ blog_domain }}/public exists
  shell: creates=/usr/share/nginx/{{ blog_domain }}/public warn=no mkdir -p /usr/share/nginx/{{ blog_domain }}/public

- name: "Installing nginx"
  apt: pkg={{ item }} state=present
  with_items:
  - nginx
  notify:
    - start_nginx

- name: "Update nginx"
  apt: pkg={{ item }} state=latest
  with_items:
  - nginx
  notify:
    - restart_nginx

- name: install npm
  apt: pkg=npm state=latest

- name: install hexo
  npm:
    global: true
    state: present
    name: hexo-cli

- name: create nginx site
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/{{ blog_domain }}.conf
    owner: root
    group: root
    mode: '0644'
  notify: reload_nginx

- name: Activate Sites
  file:
    src: /etc/nginx/sites-available/{{ blog_domain }}.conf
    dest: /etc/nginx/sites-enabled/{{ blog_domain }}
    state: link
  notify: reload_nginx

- name: Enable Sites in sniproxy
  lineinfile:
    path: /etc/sniproxy.conf
    state: present
    insertafter: '## ADD ENTRIES HERE ##'
    line: '^{{ blog_domain }}$ 127.0.0.1:444'
    regexp: '^\^{{ blog_domain }}\$ 127.0.0.1:444'
  notify: reload_sniproxy

- name: Enable Other domains in sniproxy
  lineinfile:
    path: /etc/sniproxy.conf
    state: present
    insertafter: '## ADD ENTRIES HERE ##'
    line: '{{ item }} 127.0.0.1:444'
    regexp: '^{{ item }} 127.0.0.1:444'
  with_items: 
  - '{{ blog_subdomains }}'
  notify: reload_sniproxy

- name: redeploy
  include: redeploy.yml
