lua_shared_dict prometheus_metrics 10M;
lua_package_path "/etc/nginx/lua/?.lua;;";
init_by_lua '
  prometheus = require("prometheus").init("prometheus_metrics")
  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "alias", "status", "role"})
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host", "alias", "role"})
  metric_connections = prometheus:gauge(
    "nginx_http_connections", "Number of HTTP connections", {"state", "role"})
';
log_by_lua '
  metric_requests:inc(1, {ngx.var.server_name, ngx.var.server_name, ngx.var.status, "node"})
  metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name, ngx.var.server_name, "node"})
';

server {
  listen 127.0.0.1:9113;
  location /metrics {
    content_by_lua '
      metric_connections:set(ngx.var.connections_reading, {"reading", "node"})
      metric_connections:set(ngx.var.connections_waiting, {"waiting", "node"})
      metric_connections:set(ngx.var.connections_writing, {"writing", "node"})
      prometheus:collect()
    ';
  }
}
