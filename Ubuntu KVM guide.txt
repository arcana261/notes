Linux Guest Configuration:
	Disk -> VirtIO
	RAM -> 512 MB
	Network -> VirtIO (20 GB)
	CDROM -> SCSI
	Video -> QXL
	Boot Options ->
			1. VirtIO Disk
			2. SCSI CDROM

Windows Guest Configuration:
	RAM -> 3072 MB
	Disk -> VirtIO (40 GB)
	CDROM -> IDE
	CDROM 2 -> IDE -> VirtIO Drivers ISO
	Network -> VirtIO
	Video -> QXL
	Boot Options ->
			1. VirtIO Disk
			2. SCSI CDROM

WINDOWS: DO NOT FORGET TO ADD "virtio" DRIVERS ISO DOWNLOADABLE FROM HERE:
WINDOWS: LOAD "viostor" DRIVERS! FOR INSTALLATION!
https://fedoraproject.org/wiki/Windows_Virtio_Drivers

WINDOWS: AFTER INSTALLATION, INSTALL QXL GRAPHICS DRIVER FROM HERE:
http://people.redhat.com/~vrozenfe/qxlwddm/

WINDOWS: EDIT "video" RAM SIZE USING "virsh edit <VMNAME>" AND INCREASE IT TO
4 TIMES LARGER THAN VALUES:
<model type='qxl' ram='262144' vram='262144' vgamem='65536' heads='1'/>
=================================================================


# install cpu-checker, we check if we can safely use kvm
sudo apt-get install cpu-checker

# check if kvm can be used
kvm-ok

# install libvirt and qemu
sudo apt-get install qemu-kvm libvirt-bin

# add users to groups
sudo adduser arcana libvirtd
sudo adduser arcana libvirt
sudo adduser root libvirtd
sudo adduser root libvirt

# reboot
reboot

# install more libvirt tools
sudo apt install virtinst virt-viewer virt-manager

# change default networking configuration to allow static ip ranges
virsh net-edit default
> <range start='192.168.122.100' end='192.168.122.254'/>

# set domain name to "arcana.me"
# add bellow line below <mac address ....
virsh net-edit default
> <domain name="arcana.me"/>

# restart network
virsh net-destroy default
virsh net-start default

sudo apt-get install open-vm-tools

cp /usr/lib/vmware/isoimages/windows.iso ~/KVM\ Virtual\ Machines/windows-vmware.iso


http://people.redhat.com/~vrozenfe/qxlwddm/
https://fedoraproject.org/wiki/Windows_Virtio_Drivers

## ENABLE SHARED FOLDER SUPPORT (view guide below)

=====================================================================

# view running instances
virsh list

# view all instances
virsh list --all

# view all configuration of instance
virsh dumpxml <NAME>

# list qemu instances
sudo ps aux | grep qemu

# allow for shared cloning
Base Machine -> Details -> Disk -> Shareable

# edit network
virsh net-edit default

# restart network
virsh net-destroy default
virsh net-start default

###### assign static ip address
virsh net-update default add ip-dhcp-host \
          "<host mac='52:54:00:00:00:01' name='bob' ip='192.168.122.45' />" \
          --live --config

###### remove static ip address
virsh net-update default delete ip-dhcp-host \
      '<host mac="52:54:00:6f:78:f3" ip="192.168.122.222"/>' \
      --live --config --parent-index

################ ENABLE SHARED FOLDER #############################

# first set user/group of qemu instances to local user
sudo vim /etc/libvirt/qemu.conf
> user = "arcana"
> group = "arcana"

# now restart libvirt
sudo systemctl restart libvirtd.service libvirt-guests.service libvirt-bin.service

### create a new filesystem device in virt-manager
# Driver -> Default
# Mode -> Mapped
# Source Path -> /
# Target path -> share

## MAP IN GUEST
sudo mkdir -p /share
sudo mount -t 9p -o trans=virtio,version=9p2000.L,rw share /share
##

## MAP IN GUEST USING FSTAB
# first create directory
sudo mkdir -p /share

# add modules to initramfs
sudo vi /etc/initramfs-tools/modules
> 9p
> 9pnet
> 9pnet_virtio

# regenerate initramfs
sudo update-initramfs -u

# add entry to fstab
sudo vim /etc/fstab
> share	/share	9p	trans=virtio,version=9p2000.L,rw	0	0
########################################################################

########################################################################
########################################################################
########################################################################
################ CREATE SAMBA SERVER #############################

## clone a machine (ubuntu 16.04 xenial)
Linux Guest Configuration:
	Name -> samba-server
	Memory -> 512 MB
	Disk -> VirtIO (20 GB)
	Network -> VirtIO
	CDROM -> SCSI
	Video -> QXL
	Boot Options ->
			1. VirtIO Disk
			2. SCSI CDROM
	Add Hardware -> Filesystem ->
					Driver -> Default
					Mode -> Mapped
					Source Path -> /
					Target path -> share

# assign static ip address
virsh net-update default add ip-dhcp-host \
          "<host mac='52:54:00:4b:56:5d' name='samba-server.arcana.me' ip='192.168.122.2' />" \
          --live --config

####### GO TO GUEST CONSOLE

# first update system
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade

# reboot
sudo reboot

# install some tools
sudo apt-get autoremove
sudo apt-get install vim nano screen htop psmisc dnsutils wget \
			xz-utils openssh-server ufw mlocate \
			uuid-runtime tcpdump man-db \
			traceroute w3m bridge-utils iputils-arping \
			dnsmasq git rar unrarsys

# configure firewall
sudo systemctl enable ufw
sudo systemctl restart ufw
sudo ufw enable

# configure ssh
sudo vim /etc/ssh/sshd_config
...
Port 2122
PermitRootLogin no
...
sudo ufw reload
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow 2122/tcp
sudo ufw reload
sudo systemctl enable sshd
sudo systemctl restart sshd

######## SSH INTO SAMBA SERVER!

# update mlocate
sudo updatedb

# set default editor to vim
sudo update-alternatives --config editor

# set hostname
sudo hostnamectl set-hostname samba-server
sudo vim /etc/hosts
> 127.0.0.1 samba-server

# reboot
sudo reboot

######### Enable shared folder
---> follow guide on above

# install samba server
sudo apt-get install samba samba-common python-glade2 
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.org

# create shared folder configuration
sudo vim /etc/samba/smb.conf
.....
[Public]
       comment = Public
       path = /share
       browsable = yes
       writable = yes
       guest ok = yes
       read only = no
       force user = arcana
       force group = arcana
.....

# enable and restart samba service
sudo systemctl restart smbd
sudo systemctl enable smbd

# allow ports through firewall
sudo ufw reload
sudo ufw allow 139/tcp
sudo ufw allow 445/tcp
sudo ufw reload


