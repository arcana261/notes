Linux Guest Configuration:
	Name -> centos7.ostack.me
	CPU -> 1 [] DO NOT Copy Host CPU configuration, Hypervisor Default
	Disk -> VirtIO (6 GB)
	RAM -> 512 MB
	Network -> VirtIO [default]
	Network -> VirtIO [public]
	Network -> VirtIO [private]
	CDROM -> IDE
	Video -> QXL
	Boot Options ->
			1. VirtIO Disk
			2. SCSI CDROM


========================================================

1. When grub boots press "TAB"
2. add "text" at the end of item displayed
3. press enter!


# upgrade system
sudo yum update

# WARNING!
# WARNING!
# WARNING!
# verify you can login from another tty/ssh
# if failed,
# DO NOT REBOOT!
#
# reboot
sudo reboot

# install epel repositories
sudo yum install epel-release

# install some packages
sudo yum install psmisc nano vim \
	policycoreutils-python net-tools wget \
	curl screen htop bridge-utils iperf \
	perl mlocate deltarpm \
	ntpdate setroubleshoot-server setools-console \
	bind-utils tcpdump python-pip \
	yum-plugin-priorities w3m \
	bash-completion strace dnsmasq \
	git unar zip unzip gcc make python-devel \
	openssl-devel kernel-devel graphviz \
	kernel-debug-devel autoconf automake rpm-build \
	redhat-rpm-config libtool checkpolicy \
	selinux-policy-devel \
	NetworkManager-tui \
	sysbench chrony

# update pip
sudo pip install --upgrade pip

# update system date/time
sudo ntpdate 0.ro.pool.ntp.org  1.ro.pool.ntp.org

# verify system date/time
date

# relabel entire filesystem for SElinux
sudo touch /.autorelabel

# verify you can login from another tty/ssh
# if failed, perform following
#
#
# sudo ausearch -m avc --start recent
# sudo cd /root
# sudo audit2allow -a -M fix-after-update
# sudo semodule -i /root/fix-after-update.pp
#
#
>>>>>>>>>> TTY LOGIN

# allow icmp (ping)
sudo nano -w /etc/sysctl.conf
>>>>>>>>>>>>>>>>>>>>>>
# allow ping
net.ipv4.icmp_echo_ignore_all = 0
<<<<<<<<<<<<<<<<<<<<<<

# reload sysctl
sudo sysctl -p

# update mlocate
sudo updatedb

# set default editor to vim
sudo nano -w /etc/environment
.............
EDITOR=/bin/vim
.............

# reboot system
sudo reboot

# install nux repo
sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm

# install unrar tool
sudo yum install unrar

===========================================================================
## Install OVS
===========================================================================

# download latest version of OVS
cd /usr/src
sudo wget http://openvswitch.org/releases/openvswitch-2.5.2.tar.gz
sudo tar xvf openvswitch-2.5.2.tar.gz
cd openvswitch-2.5.2

# make dist tarball
sudo ./boot.sh
sudo ./configure
sudo make dist
sudo mkdir /usr/src/dist
sudo mv openvswitch-2.5.2.tar.gz /usr/src/dist/
cd /usr/src/dist

# copy dist tarball to rpmbuild home dir
sudo mkdir -p /root/rpmbuild/SOURCES
sudo cp openvswitch-2.5.2.tar.gz /root/rpmbuild/SOURCES/

# extract dist tarball and go to it's folder
sudo tar xvf openvswitch-2.5.2.tar.gz
cd openvswitch-2.5.2 

# build RPM
sudo rpmbuild -bb --without check rhel/openvswitch.spec
sudo rpmbuild -bb rhel/openvswitch-dkms.spec

# install OVS
sudo yum localinstall /root/rpmbuild/RPMS/x86_64/openvswitch-2.5.2-1.x86_64.rpm
sudo yum localinstall /root/rpmbuild/RPMS/x86_64/openvswitch-dkms-2.5.2-1.el7.centos.x86_64.rpm

# test OVS version
sudo ovs-vsctl -V

# test kernel modules
sudo modprobe openvswitch

# set kernel module to load on boot
sudo nano -w /etc/modules-load.d/openvswitch.conf
..................
openvswitch
..................

# reboot
sudo reboot

# check if module is loaded
sudo bash -c "lsmod | grep openvswitch"

# verify daemon is loaded
sudo systemctl status openvswitch.service

# generate SSH keys
ssh-keygen -t rsa

# generate SSH keys for root
su -
..................
ssh-keygen -t rsa
exit
..................

# generate empty ssh config
touch ~/.ssh/config
chmod 600 ~/.ssh/config
sudo touch /root/.ssh/config
sudo chmod 600 /root/.ssh/config

# make small configuration to ssh
sudo vim /etc/ssh/sshd_config
..................
UseDNS no
..................




















