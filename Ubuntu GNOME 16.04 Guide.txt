# change mirror to Main Server
Activities -> Software & Updates -> Ubuntu Software -> Download from: -> Main Server 

# update to latest
sudo apt-get update
sudo apt-get autoremove
sudo apt-get upgrade
sudo apt-get distupgrade
sudo do-release-upgrade
sudo reboot

# ensure gnome is installed
sudo apt-get install ubuntu-gnome-desktop

# install some base packages
sudo apt-get install vim nano screen htop psmisc dnsutils wget \
			xz-utils openssh-server ufw mlocate \
			uuid-runtime tcpdump man-db \
			traceroute w3m bridge-utils \
			default-jdk git rar unrar \
			iputils-arping network-manager-openvpn-gnome \
			iperf docky curl uget gnome-tweak-tool

# use nvidia driver and proprietary intel drivers
Activities -> Software & Updates -> Additional Drivers -> NVIDIA binary driver
						       -> Use Processor microcode firmware for intel CPUs from intel-microcode

# disable networkmanager's dnsmasq forwarding
# comment dns=dnsmasq
sudo nano -w /etc/NetworkManager/NetworkManager.conf
>>>>>>>>>>>
#dns=dnsmasq
<<<<<<<<<<<

# configure firewall
sudo systemctl enable ufw
sudo systemctl restart ufw
sudo ufw enable

# configure ssh
sudo vim /etc/ssh/sshd_config
...
Port 2122
PermitRootLogin no
...
sudo ufw reload
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow 2122/tcp
sudo ufw reload
sudo systemctl enable sshd
sudo systemctl restart sshd

# set default editor to vim
sudo update-alternatives --config editor

# install other restricted areas
sudo apt-get install ubuntu-restricted-extras

# install smplayer
sudo apt-get install smplayer

# install mplayer2
sudo apt-get install mplayer2

# install vlc
sudo apt-get install vlc vlc-data browser-plugin-vlc

# install "n" (node version manager)
curl -L https://git.io/n-install | bash

# create a good vimrc
vim ~/.vimrc
.................
set smartindent
set shiftwidth=2
set expandtab
set tabstop=2
.................

# create a mechanism of changing network after boot
sudo nano -w /opt/ifup-net.sh
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#!/bin/bash

/sbin/ip link set dev enp3s0 down
/sbin/ip addr flush dev enp3s0
/sbin/ip link add name br-enp3s0 type bridge
/sbin/ip link set dev enp3s0 master br-enp3s0
/sbin/ip link set dev br-enp3s0 up
/sbin/ip link set dev enp3s0 up

/sbin/ip addr flush dev enp3s0
/sbin/ip link set dev br-enp3s0 address e0:3f:49:a1:6a:96
/sbin/dhclient br-enp3s0
/sbin/ip addr flush dev enp3s0

# additional IP addresses
/sbin/ip addr add 192.167.5.83/24 broadcast 192.167.5.255 dev br-enp3s0 label br-enp3s0:0
/sbin/ip addr add 192.167.20.83/24 broadcast 192.167.5.255 dev br-enp3s0 label br-enp3s0:1

# additional routes
/sbin/ip route add 192.168.20/24 via 192.168.5.1
/sbin/ip route add 192.168.21/24 via 192.168.5.1
/sbin/ip route delete default via 192.168.5.1

# new v-eth to use with KVM and other stuff
/sbin/ip link add name v-enp3s0 type veth peer name p-enp3s0
/sbin/ip link set dev v-enp3s0 master br-enp3s0
/sbin/ip link set dev v-enp3s0 up
/sbin/ip link set dev p-enp3s0 up

# additional network scripts
/opt/ifup-xen-ceph1.sh
/opt/ifup-xen-ceph2.sh
/opt/ifup-xen-ceph3.sh

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# install samba server
sudo apt-get install samba samba-common python-glade2 
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.org

# create shared folder configuration
mkdir -p ~/junk
sudo vim /etc/samba/smb.conf
.....
[general]
       map to guest = bad user

[junk]
       comment = junk
       path = /home/arcana/junk
       browsable = yes
       writable = yes
       guest ok = yes
       read only = no
       force user = arcana
       force group = arcana
.....

# enable and restart samba service
sudo systemctl restart smbd
sudo systemctl enable smbd

# allow ports through firewall
sudo ufw reload
sudo ufw allow 139/tcp
sudo ufw allow 445/tcp
sudo ufw reload

# free up /boot by deleting old kernels
sudo apt-get purge $(for tag in "linux-image" "linux-headers"; do dpkg-query -W -f'${Package}\n' "$tag-[0-9]*.[0-9]*.[0-9]*" | sort -V | awk 'index($0,c){exit} //' c=$(uname -r | cut -d- -f1,2); done)

# remove crash logs to make it's window disapear
sudo rm -rfv /var/crash/*

# set proxy for APT
sudo vim /etc/apt/apt.conf.d/99proxy
...............
Acquire::http::Proxy "http://192.168.5.138:8118";
Acquire::https::Proxy "http://192.168.5.138:8118";
...............

## create iso from cd/dvd
# find block size
isoinfo -d -i /dev/cdrom | grep -i -E 'block size|volume size' 
# start copying iso
dd if=/dev/cdrom of=test.iso bs=<block size from above> count=<volume size from above>
# send progress signal from another terminal
watch -n 1 killall -USR1 dd

## create usb flash drive from iso
sudo dd bs=4M if=input.iso of=/dev/sd<?> conv=fdatasync
sync
sudo sync
# send progress signal from another terminal
sudo watch -n 1 killall -USR1 dd

## use test disk to recover files and lost partitions
sudo apt-get install testdisk
sudo testdisk
## reload partition table
sudo partprobe
## use photorec to recover deleted files
sudo photorec

## create new LVM
sudo pvcreate /dev/sdc1
sudo vgcreate vg-ssd /dev/sdc1
sudo lvcreate -l 100%FREE -n ssd vg-ssd

# reload fstab
sudo mount -a



