Awesome docs can be found:
	https://dtucker.co.uk/hack/building-a-router-with-openvswitch.html
	http://routing.cloud.mobilesdn.org/cheatsheet.html
	http://docs.openvswitch.org/en/latest/faq/openflow/


########################################################################3
# create bridge
sudo ovs-vsctl add-br br0

# view created bridge
sudo ovs-vsctl show

# set created bridge up
sudo ip link set dev br0 up

# create our DHCP namespace
sudo ip link add name veth-0 type veth peer name peer-0
sudo ip link set dev veth-0 up
sudo ip netns add server0
sudo ip link set dev peer-0 netns server0
sudo ip netns exec server0 ip link set dev peer-0 name eth0
sudo ip netns exec server0 ip link set dev eth0 up
sudo ip netns exec server0 ip addr add 192.168.80.1/24 broadcast 192.168.80.255 dev eth0
sudo rm -fv /var/run/dnsmasq.dhcp-net0.pid
sudo ip netns exec server0 dnsmasq --port=0 --no-hosts --pid-file=/var/run/dnsmasq.dhcp-net0.pid --interface=eth0 --bind-interfaces --dhcp-leasefile=/tmp/dnsmasq.dhcp-net0.lease --dhcp-range=192.168.80.2,192.168.80.254 --log-dhcp --dhcp-sequential-ip --dhcp-option=option:router --dhcp-option=option:dns-server

# add DHCP server to bridge
sudo ovs-vsctl add-port br0 veth-0

# verify port is added to bridge
sudo ovs-vsctl show

# create 4 other servers
for i in $(seq 1 4); do \
	sudo ip link add name veth-${i} type veth peer name peer-${i}; \
	sudo ip link set dev veth-${i} up; \
	sudo ovs-vsctl add-port br0 veth-${i}; \
	sudo ip netns add server${i}; \
	sudo ip link set dev peer-${i} netns server${i}; \
	sudo ip netns exec server${i} ip link set dev peer-${i} name eth0; \
	sudo ip netns exec server${i} ip link set dev eth0 up; \
	sudo rm -fv /var/run/dhclient.server${i}.pid; \
	sudo ip netns exec server${i} dhclient -pf /var/run/dhclient.server${i}.pid -lf /var/run/dhclient.server${i}.lease eth0; \
	sudo ip netns exec server${i} ifconfig eth0; \
done

# create a secondary bridge and connect it to our br0 via veth
sudo ovs-vsctl add-br br1
sudo ip link set dev br1 up
sudo ip link add name veth-br type veth peer name peer-br
sudo ip link set dev veth-br up
sudo ip link set dev peer-br up
sudo ovs-vsctl add-port br0 veth-br
sudo ovs-vsctl add-port br1 peer-br

# create 4 more servers in br1
for i in $(seq 5 8); do \
	sudo ip link add name veth-${i} type veth peer name peer-${i}; \
	sudo ip link set dev veth-${i} up; \
	sudo ovs-vsctl add-port br1 veth-${i}; \
	sudo ip netns add server${i}; \
	sudo ip link set dev peer-${i} netns server${i}; \
	sudo ip netns exec server${i} ip link set dev peer-${i} name eth0; \
	sudo ip netns exec server${i} ip link set dev eth0 up; \
	sudo rm -fv /var/run/dhclient.server${i}.pid; \
	sudo ip netns exec server${i} dhclient -pf /var/run/dhclient.server${i}.pid -lf /var/run/dhclient.server${i}.lease eth0; \
	sudo ip netns exec server${i} ifconfig eth0; \
done

# enable RSTP (Rapid STP) on bridge
sudo ovs-vsctl set bridge br0 rstp_enable=true 
sudo ovs-vsctl set bridge br1 rstp_enable=true 

# verify rstp is enabled
sudo ovsdb-client dump | less

# add second link between bridges
sudo ip link add name veth-br2 type veth peer name peer-br2
sudo ip link set dev veth-br2 up
sudo ip link set dev peer-br2 up
sudo ovs-vsctl add-port br0 veth-br2
sudo ovs-vsctl add-port br1 peer-br2

# ping to all clients!
for ip in `cat /tmp/dnsmasq.dhcp-net0.lease | awk '{print $3}'`; do ip netns exec server1 ping -c 2 $ip; done

# verify FDB
sudo ovs-appctl fdb/show br0
sudo ovs-appctl fdb/show br1

# view network flow on bridge
sudo ovs-ofctl show somebr

######################################################
######################################################
######################################################
######################################################
## Cleanup
######################################################
######################################################
######################################################
######################################################

sudo kill -9 `cat /var/run/dnsmasq.dhcp-net0.pid`

sudo kill -9 `cat /var/run/dhclient.server1.pid`
sudo kill -9 `cat /var/run/dhclient.server2.pid`
sudo kill -9 `cat /var/run/dhclient.server3.pid`
sudo kill -9 `cat /var/run/dhclient.server4.pid`
sudo kill -9 `cat /var/run/dhclient.server5.pid`
sudo kill -9 `cat /var/run/dhclient.server6.pid`
sudo kill -9 `cat /var/run/dhclient.server7.pid`
sudo kill -9 `cat /var/run/dhclient.server8.pid`
sudo rm -fv /var/run/dhclient.server1.lease
sudo rm -fv /var/run/dhclient.server2.lease
sudo rm -fv /var/run/dhclient.server3.lease
sudo rm -fv /var/run/dhclient.server4.lease
sudo rm -fv /var/run/dhclient.server5.lease
sudo rm -fv /var/run/dhclient.server6.lease
sudo rm -fv /var/run/dhclient.server7.lease
sudo rm -fv /var/run/dhclient.server8.lease

for i in $(seq 1 4); do \
	sudo ip netns delete server${i}; \
	sudo ovs-vsctl del-port br0 veth-${i}; \
	sudo ip link delete veth-${i}; \
done

for i in $(seq 5 8); do \
	sudo ip netns delete server${i}; \
	sudo ovs-vsctl del-port br1 veth-${i}; \
	sudo ip link delete veth-${i}; \
done

sudo ovs-vsctl del-port br0 veth-br
sudo ovs-vsctl del-port br0 veth-br2
sudo ovs-vsctl del-port br1 peer-br
sudo ovs-vsctl del-port br1 peer-br2
sudo ip link delete veth-br
sudo ip link delete veth-br2

sudo ip netns delete server0
sudo ovs-vsctl del-br br0
sudo ovs-vsctl del-br br1

sudo rm -fv /tmp/dnsmasq.dhcp-net0.lease




