# Good command to print linux network stuff
ss -a -t -m -o --info


############# IPTABLES ################

iptables -I INPUT -p tcp --destination 192.168.1.1 --dport 5672 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

iptables -I INPUT -p tcp -s 192.168.1.0/24 --dport 5672 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT


############################ OVS #################################

# print version
ovs-vsctl -V

# create bridge
ovs-vsctl add-br br0

# delete bridge
ovs-vsctl del-br br0

# view created bridges
ovs-vsctl show

# add interface to bridge
ovs-vsctl add-port br0 veth-0

# remove interface from bridge
ovs-vsctl del-port br0 veth-0

# enable RSTP (Rapid STP) on bridge
ovs-vsctl set bridge br0 rstp_enable=true 

# enable STP on bridge
ovs-vsctl set bridge br0 stp_enable=true 

# dump ovs configs
ovsdb-client dump | less

# view FDB on bridge
ovs-appctl fdb/show br0

# view flow on bridge
ovs-ofctl show somebr

# persistent iptables rules
sudo apt-get install iptables-persistent
sudo dpkg-reconfigure iptables-persistent

# dealing with sysctl.d
sudo vim /etc/sysctl.d/99-sysctl.conf
.......
.......
sudo systemctl restart systemd-sysctl.service

############################ IP ADDR #################################

# add additional ip address
ip addr add 192.168.5.8/24 brd + dev eth0

# add additional ip address with label
ip addr add 192.168.5.8/24 brd + dev eth0 label eth0:0

# get ip address of ethernet device
ip addr show eth3 | grep 'inet ' | awk '{print $2}' | sed 's/\/24//'

############################ TCPDUMP #################################
# debug DHCP through tcpdump
tcpdump -i veth5 -v -e -n port 67 or port 68

############################ DNSMASQ #################################

# view available dhcp options
dnsmasq --help dhcp

############################ BRIDGING #################################

# view bridges
brctl show

# view FDB (forwarding database) on bridge
bridge fdb show

# view MDB (multicast database) on bridge
bridge mdb show

# turn on STP
sudo brctl stp <BRIDGE> on

# view stp details on bridge
sudo brctl showstp <BRIDGE>

# add vxlan entry to FDB
sudo bridge fdb add <MAC> dev vtep2 dst 192.168.73.47 port 4789 vni 81 via eth0

############################ Firewalls #################################

# firewalld allow port
sudo firewall-cmd --permanent --add-port=67/udp
sudo firewall-cmd --reload

############################ NAT IN UFW #################################

## making a destination address exception
# -A POSTROUTING -s 192.168.11.0/24 ! -d 192.168.11.246 -o eno1 -j MASQUERADE

## setup masquerading for range 192.168.200/24 in UFW
# enable FORWARDing in ufw firewall
sudo vim /etc/default/ufw 
> DEFAULT_FORWARD_POLICY="ACCEPT"

# enable ufw ipv4 port forwarding
sudo vim /etc/ufw/sysctl.conf 
> net.ipv4.ip_forward=1
> net.ipv4.conf.all.rp_filter=0
> net.ipv4.conf.default.rp_filter=0
> net.ipv4.conf.all.accept_source_route=1
> net.ipv4.conf.default.accept_source_route=1

# setup NAT in ufw
sudo vim /etc/ufw/before.rules
> # add before *filter rules! top of file
> # add before *filter rules! top of file
> # add before *filter rules! top of file
> # add before *filter rules! top of file
> # NAT table rules
> *nat
> :POSTROUTING ACCEPT [0:0]
>
> # Forward traffic through eth0 - Change to match you out-interface
> -A FORWARD -o any -j ACCEPT
> -A POSTROUTING -s 192.168.74.0/24 -o <ETHERNET | any> -j MASQUERADE
>
> # don't delete the 'COMMIT' line or these nat table rules won't
> # be processed
> COMMIT

# force restart ufw
sudo ufw disable
sudo ufw enable

# verify masquerade is set
sudo iptables -t nat -L -v
#############################################################################


############################ NOTES ABOUT UFW NAT #################################

# sometimes chain FORWARD does not exist by default in "nat" table
> -N FORWARD
> -A FORWARD -o any -j ACCEPT
> -A POSTROUTING -s 192.168.74.0/24 -o <ETHERNET | any> -j MASQUERADE


# prevent MASQUERADE from interfering with local ips
> -A POSTROUTING -s 192.168.11.0/24 ! -d 192.168.11.246 -o eno1 -j MASQUERADE

#############################################################################

############################ NAT IN FIREWALLD #################################
# install gui firewall tool
sudo dnf install firewall-config

# enable ip forwarding
sudo vim /etc/sysctl.conf
>>>>>>>>>>>>
net.ipv4.ip_forward = 1
<<<<<<<<<<<<

# reload sysctl
sudo sysctl -p

# check if ip forwarding is enabled
sudo sysctl -a | grep forward

# list zones and bounded interfaces
sudo firewall-cmd --list-all

# check if masquerading is enabled
sudo firewall-cmd --zone=FedoraWorkstation --query-masquerade && echo "enabled" || echo "Not enabled"

# enable ip masquerading
sudo firewall-cmd --zone=FedoraWorkstation --permanent --add-masquerade

# to remove ip masquerading
sudo firewall-cmd --zone=FedoraWorkstation --permanent --remove-masquerade
#############################################################################

############################ DEBIAN-based Linux Router #################################

# enable ip forwarding
nano -w /etc/sysctl.conf
> net.ipv4.ip_forward=1
> net.ipv4.conf.all.rp_filter=0
> net.ipv4.conf.default.rp_filter=0
> net.ipv4.conf.all.accept_source_route=1
> net.ipv4.conf.default.accept_source_route=1

# reload sysctl
sudo sysctl -p

# enable ip forwarding in ufw
nano -w /etc/ufw/sysctl.conf
> net/ipv4/ip_forward=1
> net/ipv4/conf/default/rp_filter=0
> net/ipv4/conf/all/rp_filter=0
> net/ipv4/conf/all/accept_source_route=1
> net/ipv4/conf/default/accept_source_route=1

# enable FORWARDing in ufw firewall
sudo vim /etc/default/ufw 
> DEFAULT_FORWARD_POLICY="ACCEPT"

# reload ufw
sudo ufw disable
sudo ufw enable

#############################################################################

############################ Linux Router #################################

# enable ip forwarding
nano -w /etc/sysctl.conf
> net.ipv4.ip_forward=1
> net.ipv4.conf.all.rp_filter=0
> net.ipv4.conf.default.rp_filter=0
> net.ipv4.conf.all.accept_source_route=1
> net.ipv4.conf.default.accept_source_route=1

# reload sysctl
sudo sysctl -p

#############################################################################





