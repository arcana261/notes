type: "MARKDOWN_NOTE"
folder: "115ff3f5d3b29d825305"
title: "Create Ceph Admin Node"
content: '''
  # Create Ceph Admin Node
  
  Property | Value
  --- | ---
  Name | cephadm.arcana.me
  Clone | centos7-hardened-ovs-ntp-ceph
  Start At Boot | Yes
  Order | order=3, up=20, down=20
  
  ## set hostname
  
  ```bash
  sudo hostnamectl set-hostname cephadm.arcana.me
  sudo reboot
  ```
  
  ## Generate new SSH keys
  
  ```bash
  ssh-keygen -t rsa
  ```
  ```bash
  su -
  ```
  ```bash
  ssh-keygen -t rsa
  exit
  ```
  ```bash
  su - ceph_u
  ```
  ```bash
  ssh-keygen -t rsa
  exit
  ```
  
  ## configure network
  
  change ip address
  ```bash
  sudo nano -w /etc/sysconfig/network-scripts/ifcfg-eth2
  ```
  ```
  IPADDR=10.0.0.1
  ```
  
  reboot
  ```bash
  sudo reboot
  ```
  
  ## configure node
  
  switch to user ceph installation user
  ```bash
  su - ceph_u
  ```
  ```bash
    # create cluster directory
    mkdir my-cluster
  	cd my-cluster
  ```
  ```bash
  	# create ssh config
  	touch ~/.ssh/config
  	chmod 600 ~/.ssh/config
  ```
  
  ## configure some scripts for administration
  
  add self to hosts
  ```bash
  sudo nano -w /etc/hosts
  ```
  ```
  10.0.0.1    cephadm
  ```
  
  create script to populate ssh config
  ```bash
  vim ~/my-cluster/populate-ssh-config.sh
  ```
  ```
  #!/bin/bash
  
  rm -f ~/.ssh/config
  touch ~/.ssh/config
  chmod 600 ~/.ssh/config
  
  while read -r line; do
          arr=($line)
          ip=${arr[0]}
          host=${arr[1]/hv-/}
          echo "Host ${host}" >> ~/.ssh/config
          echo "    Hostname ${ip}" >> ~/.ssh/config
          echo '    User ceph_u' >> ~/.ssh/config
          echo '    Port 2122' >> ~/.ssh/config
          echo ' ' >> ~/.ssh/config
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|^\\s*$)')"
  
  echo "Host dhcp.arcana.me" >> ~/.ssh/config
  echo "    Hostname dhcp.arcana.me" >> ~/.ssh/config
  echo '    User ceph_u' >> ~/.ssh/config
  echo '    Port 2122' >> ~/.ssh/config
  echo ' ' >> ~/.ssh/config
  
  ```
  ```bash
  chmod +x ~/my-cluster/populate-ssh-config.sh
  ~/my-cluster/populate-ssh-config.sh
  ```
  
  create script to copy ssh ids
  ```bash
  vim ~/my-cluster/copy-ssh-id.sh
  ```
  ```
  #!/bin/bash
  
  ~/my-cluster/populate-ssh-config.sh
  
  while read -r line; do
          arr=($line)
          host=${arr[1]/hv-/}
          ssh-copy-id ${host}
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|^\\s*$)')"
  
  ssh-copy-id dhcp.arcana.me
  
  ```
  ```bash
  chmod +x ~/my-cluster/copy-ssh-id.sh
  ~/my-cluster/copy-ssh-id.sh
  ```
  
  create script to copy hosts
  ```bash
  vim ~/my-cluster/copy-hosts.sh
  ```
  ```
  #!/bin/bash
  
  ~/my-cluster/copy-ssh-id.sh
  
  while read -r line; do
          arr=($line)
          host=${arr[1]/hv-/}
          scp /etc/hosts ${host}:~
          ssh ${host} 'sudo bash -c "cat /home/ceph_u/hosts >> /etc/hosts"' < /dev/null
          ssh ${host} 'sudo bash -c "sort -u /etc/hosts > /etc/hosts.new"' < /dev/null
          ssh ${host} 'sudo mv -fv /etc/hosts.new /etc/hosts' < /dev/null
          ssh ${host} 'rm -fv ~/hosts' < /dev/null
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|cephadm|^\\s*$)')"
  
  rm -f ~/hosts.dhcp
  
  while read -r line; do
          arr=($line)
          ip=${arr[0]}
          host=${arr[1]/hv-/}
  
          if [[ "$host" =~ ^.*.arcana.me$ ]]; then
                  echo "${ip}    ${host}" >> ~/hosts.dhcp
          else
                  echo "${ip}    ${host}.arcana.me" >> ~/hosts.dhcp
          fi
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|^\\s*$)')"
  
  scp ~/hosts.dhcp dhcp.arcana.me:~/hosts
  ssh dhcp.arcana.me 'sudo bash -c "cat /home/ceph_u/hosts >> /etc/hosts"' < /dev/null
  ssh dhcp.arcana.me 'sudo bash -c "sort -u /etc/hosts > /etc/hosts.new"' < /dev/null
  ssh dhcp.arcana.me 'sudo mv -fv /etc/hosts.new /etc/hosts' < /dev/null
  ssh dhcp.arcana.me 'rm -fv ~/hosts' < /dev/null
  
  rm -fv ~/hosts.dhcp
  ```
  ```bash
  chmod +x ~/my-cluster/copy-hosts.sh
  ~/my-cluster/copy-hosts.sh
  ```
  
  create script to restart cluster
  ```bash
  vim ~/my-cluster/restart-cluster.sh
  ```
  ```
  #!/bin/bash
  
  ~/my-cluster/copy-ssh-id.sh
  
  while read -r line; do
          arr=($line)
          host=${arr[1]/hv-/}
          ssh ${host} 'sudo systemctl restart ceph.target' < /dev/null
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|cephadm|^\\s*$)')"
  ```
  ```bash
  chmod +x ~/my-cluster/restart-cluster.sh
  ~/my-cluster/restart-cluster.sh
  ```
  
  create script to push config to cluster
  ```bash
  vim ~/my-cluster/push-config.sh
  ```
  ```
  #!/bin/bash
  
  ~/my-cluster/copy-ssh-id.sh
  
  while read -r line; do
          arr=($line)
          host=${arr[1]/hv-/}
          ceph-deploy config push ${host}
  done <<< "$(cat /etc/hosts | grep -E -v '(localhost|cephadm|^\\s*$)')"
  
  ~/my-cluster/restart-cluster.sh
  ```
  ```bash
  chmod +x ~/my-cluster/push-config.sh
  ~/my-cluster/push-config.sh
  ```
'''
tags: []
isStarred: false
isTrashed: false
createdAt: "2017-09-04T18:04:14.575Z"
updatedAt: "2017-09-30T23:23:19.779Z"
